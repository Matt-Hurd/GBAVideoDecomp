    INCLUDE asm/macros.inc
    IMPORT ||Lib$$Request$$armlib||, WEAK
    AREA text, CODE

	IMPORT __rt_entry

	ENTRY
	arm_func_start start
start ;@ 0x08000000
	b _08000200
	INCLUDE asm/rom_header.inc

	arm_func_start init_vector
init_vector ;@ 0x080000C0
	b _08000200
_080000C4
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

	arm_func_start j_init_vector_0_0
j_init_vector_0_0 ;@ 0x080000E0
	b _08000200
_080000E4
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x02, 0x00, 0x10, 0x00, 0x02, 0x00, 0x08, 0x08, 0x00, 0x00, 0x00, 0x22, 0xC2, 0xFC, 0xFF
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
	DCB 0xAB, 0x02, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x00, 0xFF, 0xFF, 0x99, 0xCB, 0xAA, 0xFF
	DCB 0xA9, 0xA9, 0xAA, 0x9B, 0x5A, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
	DCB 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
_08000200
	mov r0, #0x12
	msr cpsr_fc, r0
	LDR sp, _0800022C ;@ =0x03007FA0
	mov r0, #0x1f
	msr cpsr_fc, r0
	LDR sp, _08000228 ;@ =0x03007F00
	LDR r1, _08000248 ;@ =__main
	mov lr, pc
	bx r1

	arm_func_start sub_8000224
sub_8000224 ;@ 0x08000224
	b _08000200
	ALIGN
_08000228 DCDU 0x03007F00
_0800022C DCDU 0x03007FA0
_08000230 DCDU 0xE1A008A0
_08000234 DCDU 0xE3A01C80
_08000238 DCDU 0xE3A02690
_0800023C DCDU 0xE1C210B0
_08000240 DCDU 0xE1C200B0
_08000244 DCDU 0xE12FFF1E
_08000248 DCDU __main


	arm_func_start __main
__main ;@ 0x0800024C
	add r8, pc, #0x90 ;@ =_080002E4
	LDMIA r8, {r0, r1, r2, r3}
	add r0, r0, r8
	add r1, r1, r8
	add r2, r2, r8
	add r3, r3, r8
	sub fp, r0, #1
	sub ip, r2, #1
_0800026C
	cmp r0, r1
	beq _080002B0
	LDMIA r0!, {r4, r5, r6}
	cmp r4, r5
	beq _0800026C
	tst r4, #1
	addne r4, r4, fp
	tst r5, #1
	addne r5, r5, fp
	tst r5, #2
	addne r5, r5, sb
	bic r5, r5, #3
_0800029C
	subs r6, r6, #4
	LDRHS r7, [r4], #4
	STRHS r7, [r5], #4
	bhi _0800029C
	b _0800026C
_080002B0
	cmp r2, r3
	bleq __rt_entry
	mov r7, #0
	LDMIA r2!, {r4, r5}
	tst r4, #1
	addne r4, r4, ip
	tst r4, #2
	addne r4, r4, sb
	bic r4, r4, #3
_080002D4
	subs r5, r5, #4
	STRHS r7, [r4], #4
	bhi _080002D4
	b _080002B0
	ALIGN
_080002E4 DCDU 0x00000B70
_080002E8 DCDU 0x00000B88
_080002EC DCDU 0x00000B88
_080002F0 DCDU 0x00000B98
	END
